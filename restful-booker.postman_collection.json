{
	"info": {
		"_postman_id": "a17d6946-da93-456b-bbff-6efc1166e5f0",
		"name": "restful-booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23499000"
	},
	"item": [
		{
			"name": "Ping - HealthCheck",
			"item": [
				{
					"name": "Ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Headers is present\", function () {\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"    pm.response.to.have.header(\"Connection\");\r",
									"    pm.response.to.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.have.header(\"Content-Length\");\r",
									"    pm.response.to.have.header(\"Etag\");\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"    pm.response.to.have.header(\"Via\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response should not have a JSON body\", function () {\r",
									"    pm.response.to.not.have.jsonBody();\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"Created\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/ping",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"ping"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth - CreateToken",
			"item": [
				{
					"name": "Auth_success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Headers is present\", function () {\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"    pm.response.to.have.header(\"Connection\");\r",
									"    pm.response.to.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.have.header(\"Content-Length\");\r",
									"    pm.response.to.have.header(\"Etag\");\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"    pm.response.to.have.header(\"Via\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response body should be valid JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response should have a token\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"token\");\r",
									"});\r",
									"\r",
									"pm.test(\"Save token to environment variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"});\r",
									"\r",
									"console.log(pm.collectionVariables.get(\"token\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth_unsuccess",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Headers is present\", function () {\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"    pm.response.to.have.header(\"Connection\");\r",
									"    pm.response.to.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.have.header(\"Content-Length\");\r",
									"    pm.response.to.have.header(\"Etag\");\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"    pm.response.to.have.header(\"Via\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response body should be valid JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain error message with bad credentials\", function () {\r",
									"    pm.expect(pm.response.json().reason).to.eql(\"Bad credentials\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"aboba\",\r\n    \"password\" : \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "CreateBooking",
					"item": [
						{
							"name": "CreateBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 300ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Headers is present\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"    pm.response.to.have.header(\"X-Powered-By\");\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"    pm.response.to.have.header(\"Etag\");\r",
											"    pm.response.to.have.header(\"Date\");\r",
											"    pm.response.to.have.header(\"Via\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body should be valid JSON\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Booking Id is present in response\", function () {\r",
											"    pm.expect(pm.response.json().bookingid).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"First name is present in response\", function () {\r",
											"    pm.expect(pm.response.json().booking.firstname).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Last name is present in response\", function () {\r",
											"    pm.expect(pm.response.json().booking.lastname).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Total price is present in response\", function () {\r",
											"    pm.expect(pm.response.json().booking.totalprice).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Deposit paid is present in response\", function () {\r",
											"    pm.expect(pm.response.json().booking.depositpaid).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Booking dates are present in response\", function () {\r",
											"    pm.expect(pm.response.json().booking.bookingdates).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Check-in date format is correct\", function () {\r",
											"    pm.expect(pm.response.json().booking.bookingdates.checkin).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
											"});\r",
											"\r",
											"pm.test(\"Check-out date format is correct\", function () {\r",
											"    pm.expect(pm.response.json().booking.bookingdates.checkout).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
											"});\r",
											"\r",
											"pm.test(\"Save bookingid to environment variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"bookingid\", jsonData.bookingid);\r",
											"});\r",
											"\r",
											"pm.test(\"Save firstname to environment variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"firstname\", jsonData.booking.firstname);\r",
											"});\r",
											"\r",
											"pm.test(\"Save lastname to environment variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"lastname\", jsonData.booking.lastname);\r",
											"});\r",
											"\r",
											"pm.test(\"Save totalprice to environment variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"totalprice\", jsonData.booking.totalprice);\r",
											"});\r",
											"\r",
											"pm.test(\"Save depositpaid to environment variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"depositpaid\", jsonData.booking.depositpaid);\r",
											"});\r",
											"\r",
											"pm.test(\"Save checkin to environment variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"checkin\", jsonData.booking.bookingdates.checkin);\r",
											"});\r",
											"\r",
											"pm.test(\"Save checkout to environment variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"checkout\", jsonData.booking.bookingdates.checkout);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"{{$randomLastName}}\",\r\n    \"totalprice\" : {{$randomPrice}},\r\n    \"depositpaid\" : {{$randomBoolean}},\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{$randomDateRecent}}\",\r\n        \"checkout\" : \"{{$randomDateFuture}}\"\r\n    },\r\n    \"additionalneeds\" : \"{{$randomWord}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://restful-booker.herokuapp.com/booking",
									"protocol": "https",
									"host": [
										"restful-booker",
										"herokuapp",
										"com"
									],
									"path": [
										"booking"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GetBookingIds",
					"item": [
						{
							"name": "BookingId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 300ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Headers is present\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"    pm.response.to.have.header(\"X-Powered-By\");\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"    pm.response.to.have.header(\"Etag\");\r",
											"    pm.response.to.have.header(\"Date\");\r",
											"    pm.response.to.have.header(\"Via\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body should be valid JSON\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Booking Id is present in response\", function () {\r",
											"    pm.expect(pm.response.json()[0].bookingid).to.exist;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://restful-booker.herokuapp.com/booking",
									"protocol": "https",
									"host": [
										"restful-booker",
										"herokuapp",
										"com"
									],
									"path": [
										"booking"
									]
								}
							},
							"response": []
						},
						{
							"name": "BookingByName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 300ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Headers is present\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"    pm.response.to.have.header(\"X-Powered-By\");\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"    pm.response.to.have.header(\"Etag\");\r",
											"    pm.response.to.have.header(\"Date\");\r",
											"    pm.response.to.have.header(\"Via\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body should be valid JSON\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Booking Id is present in response\", function () {\r",
											"    pm.expect(pm.response.json()[0].bookingid).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Booking Id matches the name\", function () {\r",
											"    var bookingIdToCheck = parseInt(pm.collectionVariables.get(\"bookingid\"))\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData[0].bookingid).to.eql(bookingIdToCheck);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://restful-booker.herokuapp.com/booking?firstname={{firstname}}&lastname={{lastname}}",
									"protocol": "https",
									"host": [
										"restful-booker",
										"herokuapp",
										"com"
									],
									"path": [
										"booking"
									],
									"query": [
										{
											"key": "firstname",
											"value": "{{firstname}}"
										},
										{
											"key": "lastname",
											"value": "{{lastname}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GetBooking",
					"item": [
						{
							"name": "Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 300ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Headers is present\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"    pm.response.to.have.header(\"X-Powered-By\");\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"    pm.response.to.have.header(\"Etag\");\r",
											"    pm.response.to.have.header(\"Date\");\r",
											"    pm.response.to.have.header(\"Via\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body should be valid JSON\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"First name is present in response\", function () {\r",
											"    pm.expect(pm.response.json().firstname).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"First name is valid in response\", function () {\r",
											"    var firstnameToCheck = pm.collectionVariables.get(\"firstname\")\r",
											"    pm.expect(pm.response.json().firstname).to.eql(firstnameToCheck);\r",
											"});\r",
											"\r",
											"pm.test(\"Last name is present in response\", function () {\r",
											"    pm.expect(pm.response.json().lastname).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Last name is valid in response\", function () {\r",
											"    var lastnameToCheck = pm.collectionVariables.get(\"firstname\")\r",
											"    pm.expect(pm.response.json().firstname).to.eql(lastnameToCheck);\r",
											"});\r",
											"\r",
											"pm.test(\"Total price is present in response\", function () {\r",
											"    pm.expect(pm.response.json().totalprice).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Total price is valid in response\", function () {\r",
											"    var totalpriceToCheck = parseInt(pm.collectionVariables.get(\"totalprice\"))\r",
											"    pm.expect(pm.response.json().totalprice).to.eql(totalpriceToCheck);\r",
											"});\r",
											"\r",
											"pm.test(\"Deposit paid is present in response\", function () {\r",
											"    pm.expect(pm.response.json().depositpaid).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Deposit paid is valid in response\", function () {\r",
											"    var depositpaidToCheck = Boolean(pm.collectionVariables.get(\"depositpaid\"))\r",
											"    pm.expect(pm.response.json().depositpaid).to.eql(depositpaidToCheck);\r",
											"});\r",
											"\r",
											"pm.test(\"Booking dates are present in response\", function () {\r",
											"    pm.expect(pm.response.json().bookingdates).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Check-in date format is correct\", function () {\r",
											"    pm.expect(pm.response.json().bookingdates.checkin).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
											"});\r",
											"\r",
											"pm.test(\"Check-in is valid in response\", function () {\r",
											"    var checkinToCheck = pm.collectionVariables.get(\"checkin\")\r",
											"    pm.expect(pm.response.json().bookingdates.checkin).to.eql(checkinToCheck);\r",
											"});\r",
											"\r",
											"pm.test(\"Check-out date format is correct\", function () {\r",
											"    pm.expect(pm.response.json().bookingdates.checkout).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
											"});\r",
											"\r",
											"pm.test(\"Check-out is valid in response\", function () {\r",
											"    var checkoutToCheck = pm.collectionVariables.get(\"checkout\")\r",
											"    pm.expect(pm.response.json().bookingdates.checkout).to.eql(checkoutToCheck);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://restful-booker.herokuapp.com/booking/{{bookingid}}",
									"protocol": "https",
									"host": [
										"restful-booker",
										"herokuapp",
										"com"
									],
									"path": [
										"booking",
										"{{bookingid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "UpdateBooking",
					"item": [
						{
							"name": "UpdateBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 300ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Headers is present\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"    pm.response.to.have.header(\"X-Powered-By\");\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"    pm.response.to.have.header(\"Etag\");\r",
											"    pm.response.to.have.header(\"Date\");\r",
											"    pm.response.to.have.header(\"Via\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body should be valid JSON\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Cookie",
										"value": "token={{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"{{$randomLastName}}\",\r\n    \"totalprice\" : {{$randomPrice}},\r\n    \"depositpaid\" : {{$randomBoolean}},\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{$randomDateRecent}}\",\r\n        \"checkout\" : \"{{$randomDateFuture}}\"\r\n    },\r\n    \"additionalneeds\" : \"{{$randomWord}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://restful-booker.herokuapp.com/booking/{{bookingid}}",
									"protocol": "https",
									"host": [
										"restful-booker",
										"herokuapp",
										"com"
									],
									"path": [
										"booking",
										"{{bookingid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PartialUpdateBooking",
					"item": [
						{
							"name": "PartialUpdateBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 300ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Headers is present\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"    pm.response.to.have.header(\"X-Powered-By\");\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"    pm.response.to.have.header(\"Etag\");\r",
											"    pm.response.to.have.header(\"Date\");\r",
											"    pm.response.to.have.header(\"Via\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body should be valid JSON\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Cookie",
										"value": "token={{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"{{$randomLastName}}\",\r\n    \"depositpaid\": {{$randomBoolean}},\r\n    \"additionalneeds\": \"{{$randomWord}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://restful-booker.herokuapp.com/booking/{{bookingid}}",
									"protocol": "https",
									"host": [
										"restful-booker",
										"herokuapp",
										"com"
									],
									"path": [
										"booking",
										"{{bookingid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteBooking",
					"item": [
						{
							"name": "DeleteBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 300ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Headers is present\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"    pm.response.to.have.header(\"X-Powered-By\");\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"    pm.response.to.have.header(\"Etag\");\r",
											"    pm.response.to.have.header(\"Date\");\r",
											"    pm.response.to.have.header(\"Via\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response should not have a JSON body\", function () {\r",
											"    pm.response.to.not.have.jsonBody();\r",
											"});\r",
											"\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(\"Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Cookie",
										"value": "token={{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://restful-booker.herokuapp.com/booking/{{bookingid}}",
									"protocol": "https",
									"host": [
										"restful-booker",
										"herokuapp",
										"com"
									],
									"path": [
										"booking",
										"{{bookingid}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "bookingid",
			"value": "",
			"type": "string"
		},
		{
			"key": "firstname",
			"value": "",
			"type": "string"
		},
		{
			"key": "lastname",
			"value": "",
			"type": "string"
		},
		{
			"key": "totalprice",
			"value": "",
			"type": "string"
		},
		{
			"key": "depositpaid",
			"value": "",
			"type": "string"
		},
		{
			"key": "checkin",
			"value": "",
			"type": "string"
		},
		{
			"key": "checkout",
			"value": "",
			"type": "string"
		}
	]
}